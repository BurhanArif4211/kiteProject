def followUserByPublicId(request, publicProfileId):
    try:
        claims, decoded_user = validateLogin(request)
    except AuthenticationError as e:
        print(f"Authentication error: {e}")
        return redirect("/login")
    if not claims:
        return redirect('/')
    if claims['email_verified']:
        
        print(f"The follow function was called by {claims['name']} for {publicProfileId}")
        
        ours_profile_data = store.collection('users1').where('user_id', '==', claims['user_id']).get()
        
        ourPublicProfileId = ours_profile_data[0].to_dict().get('publicProfileId')
        # theirPublicProfileId = publicProfileId
        # Check if you are trying to follow yourself
        if publicProfileId == ourPublicProfileId:
            print("You can't follow yourself!")
            response={
                                "success": False,
                                "message": "You can't follow yourself!",
                                "data": {
                                    "followerCount": 'not changed',# dont change anythnig in the front end
                                    "followingCount": 'not changed'# dont change anythnig in the front end
                               }
                            }
            return JsonResponse(response)
        else:
            # Update 'following' for the current user (Staging)
            ourCurrentFollowing = set(
                ours_profile_data[0].to_dict().get('following', []))

            if publicProfileId in ourCurrentFollowing:
                # If the user is already in the following list, remove them
                ourCurrentFollowing.remove(publicProfileId)
            else:
                # If the user is not in the following list, add them
                ourCurrentFollowing.add(publicProfileId)
            # Here we do the actual update of data.
            ourProfileData = store.collection('users1').where('publicProfileId', '==', ourPublicProfileId ).stream()
            for doc in ourProfileData:
                store.collection('users1').document(doc.id).update({'following': list(ourCurrentFollowing)})
                
            # Update 'followers' for the other user
            theirProfileData = store.collection('users1').where('publicProfileId', '==', publicProfileId).stream()
            for doc in theirProfileData:
                ourFollowersList = doc.to_dict()
                their_current_followers = set(ourFollowersList.get('followers', []))
                if ourPublicProfileId in their_current_followers:
                    # If the current user is already in the other person's followers list, remove them
                    their_current_followers.remove(ourPublicProfileId)
                    response={
                                "success": True,
                                "message": f'You followed {their_current_followers} ',
                                "data": {
                                    "followerCount": 'follower_count',
                                    "followingCount": 'following_count'
                               }
                            }
                    return JsonResponse()
                else:
                    # If the current user is not in the other person's followers list, add them
                    their_current_followers.add(ourPublicProfileId)
                    store.collection('users1').document(doc.id).update({'followers': list(their_current_followers)})
                    response={
                                "success": True,
                                "message": f'You followed {their_current_followers} ',
                                "data": {
                                    "followerCount": 'follower_count',
                                    "followingCount": 'following_count'
                               }
                            }
                    return JsonResponse(response)